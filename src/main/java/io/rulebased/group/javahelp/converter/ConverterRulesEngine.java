// *** WARNING: DO NOT MODIFY *** This is a generated Java source code! 
// 
// Generated by LF-ET 2.2.0 (220224a), https://www.lohrfink.de/lfet
// From decision table
// "/opt/data/github/rulebased-group/javahelp-to-antora-converter/src/main/resources/Converter.lfet"
// 11.04.2022 00:38
// 

// Prolog Standard ---->
// profile LFET.Java.Prolog.Standard.Interface.Dt.ini not found
// used LF-ET 2.2.0 (220224a) build in default

package io.rulebased.group.javahelp.converter;

import javax.annotation.Generated;

@Generated("LF-ET")
@SuppressWarnings("ConstantConditions")
class ConverterRulesEngine
{
    public <T> void execute(ConverterDT<T> iface, T model)
    {
 
    // Prolog Standard <----

        // Prolog Decision Table ---->
        // $$Package=io.rulebased.group.javahelp.converter
        // Prolog Decision Table <----
        
        int ruleGroup = 1;
        boolean exit = false;
        
        while ( !exit )
        {
            exit = true;
            
            if ( ruleGroup == 1 )
            {
                if ( iface.isArgsSizeEqual_Equal0(model) )
                {
                    // Rule R01 ---->
                    
                    iface.doTrace("Converter", "20220411.003823", 7, 1, model);
                    
                    iface.doSetConfigFileName_Default(model);
                    
                    ruleGroup++;
                    exit = false;
                    
                    // Rule R01 <----
                }
                else if ( iface.isArgsSizeEqual_Equal1(model) )
                {
                    // Rule R02 ---->
                    
                    iface.doTrace("Converter", "20220411.003823", 7, 2, model);
                    
                    iface.doSetConfigFileName_Args(model);
                    
                    ruleGroup++;
                    exit = false;
                    
                    // Rule R02 <----
                }
                else
                {
                    // Rule R03 ---->
                    
                    iface.doTrace("Converter", "20220411.003823", 7, 3, model);
                    
                    iface.doError(ConverterDT.Error.$001 /* MA */ , model);
                    
                    exit = true;
                    
                    // Rule R03 <----
                }
            }
            else if ( ruleGroup == 2 )
            {
                if ( iface.isExistsConfigFile(model) )
                {
                    // Rule R04 ---->
                    
                    iface.doTrace("Converter", "20220411.003823", 7, 4, model);
                    
                    iface.doReadConfigFileAsYaml(model);
                    
                    ruleGroup++;
                    exit = false;
                    
                    // Rule R04 <----
                }
                else
                {
                    // Rule R05 ---->
                    
                    iface.doTrace("Converter", "20220411.003823", 7, 5, model);
                    
                    iface.doError(ConverterDT.Error.$002 /* MCF */ , model);
                    
                    exit = true;
                    
                    // Rule R05 <----
                }
            }
            else
            {
                if ( iface.isInputFileTypeEqual_F(model) )
                {
                    // Rule R06 ---->
                    
                    iface.doTrace("Converter", "20220411.003823", 7, 6, model);
                    
                    iface.doSetInputFacade(ConverterDT.SetInputFacade.$001 /* JAR */ , model);
                    iface.doStartMigration(model);
                    
                    exit = true;
                    
                    // Rule R06 <----
                }
                else
                {
                    // Rule R07 ---->
                    
                    iface.doTrace("Converter", "20220411.003823", 7, 7, model);
                    
                    iface.doError(ConverterDT.Error.$003 /* NSIT */ , model);
                    
                    exit = true;
                    
                    // Rule R07 <----
                }
            }
        
        }

        // Epilog Standard ---->
        // profile LFET.Java.Epilog.Standard.Interface.Dt.ini not found
        // used LF-ET 2.2.0 (220224a) build in default

    }

}
 
// Epilog Standard <----

// End of generated Java source code
// Generated by LF-ET 2.2.0 (220224a), https://www.lohrfink.de/lfet

