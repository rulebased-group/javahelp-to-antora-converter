// *** WARNING: DO NOT MODIFY *** This is a generated Java source code! 
// 
// Generated by LF-ET 2.2.0 (220224a), https://www.lohrfink.de/lfet
// From decision table
// "/opt/data/github/rulebased-group/javahelp-to-antora-converter/src/main/resources/ConvertAnchor.lfet"
// 24.04.2022 02:33
// 

// Prolog Standard ---->
// profile LFET.Java.Prolog.Standard.Interface.Dt.ini not found
// used LF-ET 2.2.0 (220224a) build in default

package io.rulebased.group.javahelp.converter.antora.convert.anchor;

import javax.annotation.Generated;

@Generated("LF-ET")
@SuppressWarnings("ConstantConditions")
class ConvertAnchorRulesEngine
{
    public <T> void execute(ConvertAnchorDT<T> iface, T model)
    {
 
    // Prolog Standard <----

        // Prolog Decision Table ---->
        // $$Package=io.rulebased.group.javahelp.converter.antora.convert.anchor
        // Prolog Decision Table <----
        
        int ruleGroup = 1;
        boolean exit = false;
        
        while ( !exit )
        {
            exit = true;
            
            if ( ruleGroup == 1 )
            {
                if ( iface.isCurrentElementIs(ConvertAnchorDT.CurrentElementIs.$001 /* a */ , model) )
                {
                    if ( iface.isContainsCurrentElementChildElements(model) )
                    {
                        // Rule R01 ---->
                        
                        iface.doTrace("ConvertAnchor", "20220424.023312", 8, 1, model);
                        
                        iface.doExtractAnchorTarget(model);
                        
                        ruleGroup = 2;
                        exit = false;
                        
                        // Rule R01 <----
                    }
                    else
                    {
                        // Rule R02 ---->
                        
                        iface.doTrace("ConvertAnchor", "20220424.023312", 8, 2, model);
                        
                        iface.doExtractAnchorTarget(model);
                        
                        exit = true;
                        
                        // Rule R02 <----
                    }
                }
                else
                {
                    // Rule R03 ---->
                    
                    iface.doTrace("ConvertAnchor", "20220424.023312", 8, 3, model);
                    
                    exit = true;
                    
                    // Rule R03 <----
                }
            }
            else
            {
                if ( iface.isNextChildElementExists(model) )
                {
                    if ( iface.isCurrentElementTypeIs(ConvertAnchorDT.CurrentElementTypeIs.$001 /* T */ , model) )
                    {
                        // Rule R04 ---->
                        
                        iface.doTrace("ConvertAnchor", "20220424.023312", 8, 4, model);
                        
                        iface.doExtractAnchorText(model);
                        
                        ruleGroup = 2;
                        exit = false;
                        
                        // Rule R04 <----
                    }
                    else if ( iface.isCurrentElementTypeIs(ConvertAnchorDT.CurrentElementTypeIs.$002 /* E */ , model) )
                    {
                        // Rule R05 ---->
                        
                        iface.doTrace("ConvertAnchor", "20220424.023312", 8, 5, model);
                        
                        ruleGroup = 2;
                        exit = false;
                        
                        // Rule R05 <----
                    }
                    else
                    {
                        // Rule R06 ---->
                        
                        iface.doTrace("ConvertAnchor", "20220424.023312", 8, 6, model);
                        
                        ruleGroup = 2;
                        exit = false;
                        
                        // Rule R06 <----
                    }
                }
                else
                {
                    if ( iface.isAnchorTextIsEmpty(model) )
                    {
                        // Rule R07 ---->
                        
                        iface.doTrace("ConvertAnchor", "20220424.023312", 8, 7, model);
                        
                        exit = true;
                        
                        // Rule R07 <----
                    }
                    else
                    {
                        // Rule R08 ---->
                        
                        iface.doTrace("ConvertAnchor", "20220424.023312", 8, 8, model);
                        
                        iface.doCreateXrefLink(model);
                        
                        exit = true;
                        
                        // Rule R08 <----
                    }
                }
            }
        
        }

        // Epilog Standard ---->
        // profile LFET.Java.Epilog.Standard.Interface.Dt.ini not found
        // used LF-ET 2.2.0 (220224a) build in default

    }

}
 
// Epilog Standard <----

// End of generated Java source code
// Generated by LF-ET 2.2.0 (220224a), https://www.lohrfink.de/lfet

